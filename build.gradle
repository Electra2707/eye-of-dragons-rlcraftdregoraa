buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            name = "CurseForge"
            url = "https://minecraft.curseforge.com/api/maven/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.

version = "0.0.5"
group= "eyeofdragons"
archivesBaseName = "eyeofdragons"
sourceCompatibility = targetCompatibility = "1.8"

minecraft {
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    mappings = "stable_39"
    makeObfSourceJar = true
}

repositories {
    mavenCentral()
//    maven {
//        url "https://maven.mcmoddev.com/"
//    }
    maven {
        name "JEI"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name "gegy1000"
        url "https://maven.gegy1000.net"
    }
    maven {
        name "Jared"
        url "http://maven.blamejared.com/"
    }
    maven { // mcjty
        name 'tterrag'
        url "https://maven.tterrag.com/"
    }
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }

    maven {
        url "https://minecraft.curseforge.com/api/maven/"
    }
}

dependencies {
    // Use the local JAR file instead of the remote dependency
    compile files('lib/Ice and Fire-2.0.5.jar')
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

minecraft.coreMod = "de.curlybracket.eyeofdragons.EyeOfDragonsPlugin"

jar {
    manifest {
        attributes 'FMLCorePlugin': "de.curlybracket.eyeofdragons.EyeOfDragonsPlugin", 'FMLCorePluginContainsFMLMod': true
    }
}


task devJar(type: org.gradle.jvm.tasks.Jar) {
    classifier = "dev"
    from sourceSets.main.output
}
